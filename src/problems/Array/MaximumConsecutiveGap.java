/**
 * 
 */
package problems.Array;

import java.util.ArrayList;
import java.util.Collections;

/**
 * @author PRATAP
 *
 */
public class MaximumConsecutiveGap {

	/**
	 * @param args
	 */
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		ArrayList<Integer> list = new ArrayList<Integer>();
		int[] arr = { 89767785, 90114784, 72654614, 65445861, 9615936, 39703177, 30126371, 15852344, 10144620, 38871288,
				60649078, 60261971, 63018187, 26681999, 30030430, 62763159, 45925830, 4963621, 77960663, 96006455,
				41933303, 15164187, 61403757, 42456354, 92332646, 52946804, 36857274, 77875554, 66954914, 94069099,
				1442560, 90557043, 91951929, 25388369, 46033802, 63768534, 81563389, 49692175, 1719025, 62441403,
				22607899, 62825457, 81060761, 22034632, 77252778, 44398339, 46345657, 30452624, 22388331, 60491953,
				38244500, 79059663, 44432765, 9525173, 26156991, 33866943, 7995607, 39539351, 63273239, 47074912,
				30840770, 93734946, 10990342, 32442968, 72377367, 12630381, 25399255, 33880937, 50214187, 73332566,
				17480757, 62969922, 15492144, 35812248, 85595904, 85766099, 81956129, 38099079, 89473985, 18484235,
				45044781, 63145983, 27065724, 36845564, 88087006, 46641987, 78192259, 10266821, 40333715, 61459059,
				95732178, 90028971, 10091124, 11062773, 54676918, 17900260, 23622255, 82231931, 90443554, 13856843,
				61574330, 10798760, 6116166, 75936724, 61081855, 15309179, 47289943, 39367360, 15218016, 11602691,
				78377532, 92084751, 96961099, 78064592, 95257511, 10632134, 71285741, 67834490, 69907934, 41749202,
				49533350, 59526498, 10640468, 18376701, 67035380, 12260491, 96603897, 88320276, 85526560, 99997092,
				15385773, 20709030, 60788879, 20429511, 47348207, 13724275, 80987601, 51825714, 20675045, 65787874,
				3469931, 55224152, 35859643, 2468068, 88385043, 21695749, 56309092, 14392157, 7895516, 44026937,
				46643184, 76630417, 18284536, 22904358, 30140177, 37357653, 94300108, 77135974, 79751516, 39874034,
				66143878, 39492085, 52079889, 22817508, 50147828, 13917344, 30930990, 70975683, 43260134, 28468779,
				55062034, 51604642, 28786478, 26987654, 55413033, 99997050, 34984278, 42898441, 342313, 68042757,
				31164600, 3667081, 19865133, 26591217, 34947315, 89449346, 34453227, 95551317, 14575479, 45015434,
				44720422, 6611564, 27574588, 53893293, 47835033, 24803246, 56311198, 17575745, 96531325, 69978094,
				81841519, 37652635, 4725508, 20581702, 89950651, 27967554, 17397336, 45494909, 42023402, 32968791,
				68955582, 42764135, 98941862, 44586073, 92580857, 45080053, 51076354, 12458829, 87473149, 20857398,
				95018653, 19814265, 39440787, 98311247, 78371870, 27000182, 61084996, 39398723, 38825246, 66516785,
				94565758, 93056455, 49896473, 96268708, 66559735, 98257298, 8749114, 17454196, 87857952, 45790478,
				85983048, 38136811, 25011131, 24430567, 56826007, 32552373, 46869867, 25111680, 45194142, 29483374,
				47795422, 3034105, 20231158, 20504185, 46513634, 34859659, 21101087, 75427983, 41215254, 35327237,
				68070124, 93257058, 97762557, 75174871, 19840545, 18226834, 590491, 44203109, 69854607, 30064047,
				45933188, 57330770, 19148104, 84201806, 52290598, 57328822, 73125091, 69535235, 35666316, 88797271,
				7560804, 57462583, 7349947, 23974544, 73985190, 77415333, 8672178, 13858711, 20295627, 34871200,
				22092096, 34653382, 69475241, 3532048, 14642837, 5802583, 12422092, 80566523, 54930090, 69597926,
				43205728, 5670293, 95898911, 90321786, 51883801, 17247653 };
		for (int i : arr)
			list.add(i);
		int maxGap = maximumGap(list);
		System.out.println(maxGap);
	}

	public static int maximumGap(ArrayList<Integer> v) {
		// TODO Auto-generated method stub
		if(v.size() <= 1)
            return 0;
        int max = Collections.max(v);
		int min = Collections.min(v);
		ArrayList<Integer> bmin = new ArrayList<>(v.size() - 1);
		ArrayList<Integer> bmax = new ArrayList<>(v.size() - 1);
		for (int i = 0; i < v.size(); i++) {
			bmin.add(Integer.MAX_VALUE);
			bmax.add(Integer.MIN_VALUE);
		}
		float divide = (float)(max - min) / (float)(v.size() - 1);
		int index = -1;
		for (int i = 0; i < v.size(); i++) {
			if (v.get(i) == min || v.get(i) == max)
				continue;
			index = (int) ((v.get(i) - min) / divide);
			bmin.set(index, Math.min(v.get(i), bmin.get(index)));
			bmax.set(index, Math.max(v.get(i), bmax.get(index)));
		}
		int prev = min;
		int ans = 0;
		for (int i = 0; i < v.size(); i++) {
			if (bmin.get(i) == Integer.MAX_VALUE)
				continue;
			ans = Math.max(ans, bmin.get(i) - prev);
			prev = bmax.get(i);
		}
		ans = Math.max(ans, max - prev);
		return ans;
	}

}
